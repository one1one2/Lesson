function [F g] = GenPowsg(x)

n = length(x);
F = 0;
g = zeros(n,1);
for i = 1:n/2-1
  F = F + (x(2*i-1) + 10*x(2*i))^2 + 5*(x(2*i+1)-x(2*i+2))^2+...
  (x(2*i)-2*x(2*i+1))^4 + 10*(x(2*i-1) - x(2*i+2))^4;
  g(2*i-1) = g(2*i-1) + 2*(x(2*i-1)+10*x(2*i)) + 40*(x(2*i-1)-x(2*i+2))^3;
  g(2*i) = g(2*i) +20*(x(2*i-1)+10*x(2*i)) + 4*(x(2*i)-2*x(2*i+1))^3;
  g(2*i+1) = g(2*i+1) + 10*(x(2*i+1)-x(2*i+2)) - 8*(x(2*i)-2*x(2*i+1))^3;
  g(2*i+2) = g(2*i+2) - 10*(x(2*i+1)-x(2*i+2)) - 40*(x(2*i-1)-x(2*i+2))^3;
end 





%n = length(x);
%[r J] = GenPowsgJ(x);
%F = r'*r;
%g = 2*J'*r;
%if nargout > 2
  %G = J'*J;
  %for i = 1:n/2-1
    %G(2*i:2*i+1,2*i:2*i+1) = G(2*i:2*i+1,2*i:2*i+1) + [2 -4; -4 8]*r(4*i-1);
    %G(2*i-1:3:2*i+2,2*i-1:3:2*i+2) = G(2*i-1:3:2*i+2,2*i-1:3:2*i+2)... 
    %+ 2*sqrt(10)*[1 -1; -1 1]*r(4*i);
  %end 
  %G = G*2;
end 
